var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
""(__makeTemplateObject(["typescript\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Clock, DollarSign, Tag, MapPin } from 'lucide-react';\nimport { supabase } from '../lib/supabase';\nimport { useUserContext } from '../context/UserContext';\nimport { Item } from '../types';\nimport PlaceBidModal from '../components/items/PlaceBidModal';\nimport BidHistory from '../components/items/BidHistory';\nimport ItemImageGallery from '../components/items/ItemImageGallery';\nimport { formatCurrency, formatTimestamp } from '../lib/utils';\nimport toast from 'react-hot-toast';\n\nexport default function ItemDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { userRole } = useUserContext();\n  const [item, setItem] = useState<Item | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [showBidModal, setShowBidModal] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      fetchItem();\n    }\n  }, [id]);\n\n  const fetchItem = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('items')\n        .select('*, buyer:profiles(*), bids(*)')\n        .eq('id', id)\n        .single();\n\n      if (error) throw error;\n      setItem(data);\n    } catch (error) {\n      console.error('Error fetching item:', error);\n      toast.error('Failed to load item details');\n      navigate('/');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n      </div>\n    );\n  }\n\n  if (!item) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"text-center\">\n          <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Item not found</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">The item you're looking for doesn't exist or has been removed.</p>\n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate('/')}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\"\n            >\n              Back to Marketplace\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div>\n          <ItemImageGallery images={[item.image_url || '']} />\n        </div>\n\n        <div className=\"space-y-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">{item.title}</h1>\n            <div className=\"mt-2 flex items-center space-x-4\">\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800\">\n                {item.category}\n              </span>\n              <span className=\"text-gray-500 dark:text-gray-400\">\n                Posted by {item.buyer?.name}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"prose dark:prose-invert max-w-none\">\n            <p>{item.description}</p>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <DollarSign className=\"h-5 w-5\" />\n              <span>Target Price: {formatCurrency(item.target_price)}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <Clock className=\"h-5 w-5\" />\n              <span>Deadline: {formatTimestamp(item.deadline)}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <Tag className=\"h-5 w-5\" />\n              <span>Condition: {item.condition}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <MapPin className=\"h-5 w-5\" />\n              <span>{item.location}</span>\n            </div>\n          </div>\n\n          {userRole === 'seller' && item.status === 'open' && (\n            <div className=\"mt-6\">\n              <button\n                onClick={() => setShowBidModal(true)}\n                className=\"w-full bg-indigo-600 text-white py-3 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Place Bid\n              </button>\n            </div>\n          )}\n\n          <BidHistory bids={item.bids || []} />\n        </div>\n      </div>\n\n      {showBidModal && (\n        <PlaceBidModal\n          item={item}\n          onClose={() => setShowBidModal(false)}\n          onBidPlaced={fetchItem}\n        />\n      )}\n    </div>\n  );\n}\n"], ["typescript\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Clock, DollarSign, Tag, MapPin } from 'lucide-react';\nimport { supabase } from '../lib/supabase';\nimport { useUserContext } from '../context/UserContext';\nimport { Item } from '../types';\nimport PlaceBidModal from '../components/items/PlaceBidModal';\nimport BidHistory from '../components/items/BidHistory';\nimport ItemImageGallery from '../components/items/ItemImageGallery';\nimport { formatCurrency, formatTimestamp } from '../lib/utils';\nimport toast from 'react-hot-toast';\n\nexport default function ItemDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { userRole } = useUserContext();\n  const [item, setItem] = useState<Item | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [showBidModal, setShowBidModal] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      fetchItem();\n    }\n  }, [id]);\n\n  const fetchItem = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('items')\n        .select('*, buyer:profiles(*), bids(*)')\n        .eq('id', id)\n        .single();\n\n      if (error) throw error;\n      setItem(data);\n    } catch (error) {\n      console.error('Error fetching item:', error);\n      toast.error('Failed to load item details');\n      navigate('/');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n      </div>\n    );\n  }\n\n  if (!item) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"text-center\">\n          <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Item not found</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">The item you're looking for doesn't exist or has been removed.</p>\n          <div className=\"mt-6\">\n            <button\n              onClick={() => navigate('/')}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\"\n            >\n              Back to Marketplace\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div>\n          <ItemImageGallery images={[item.image_url || '']} />\n        </div>\n\n        <div className=\"space-y-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">{item.title}</h1>\n            <div className=\"mt-2 flex items-center space-x-4\">\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800\">\n                {item.category}\n              </span>\n              <span className=\"text-gray-500 dark:text-gray-400\">\n                Posted by {item.buyer?.name}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"prose dark:prose-invert max-w-none\">\n            <p>{item.description}</p>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <DollarSign className=\"h-5 w-5\" />\n              <span>Target Price: {formatCurrency(item.target_price)}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <Clock className=\"h-5 w-5\" />\n              <span>Deadline: {formatTimestamp(item.deadline)}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <Tag className=\"h-5 w-5\" />\n              <span>Condition: {item.condition}</span>\n            </div>\n            <div className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300\">\n              <MapPin className=\"h-5 w-5\" />\n              <span>{item.location}</span>\n            </div>\n          </div>\n\n          {userRole === 'seller' && item.status === 'open' && (\n            <div className=\"mt-6\">\n              <button\n                onClick={() => setShowBidModal(true)}\n                className=\"w-full bg-indigo-600 text-white py-3 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Place Bid\n              </button>\n            </div>\n          )}\n\n          <BidHistory bids={item.bids || []} />\n        </div>\n      </div>\n\n      {showBidModal && (\n        <PlaceBidModal\n          item={item}\n          onClose={() => setShowBidModal(false)}\n          onBidPlaced={fetchItem}\n        />\n      )}\n    </div>\n  );\n}\n"]))(__makeTemplateObject([""], [""]));
